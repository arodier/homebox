# Deployed using {{ role_name }} role

map $http_upgrade $connection_upgrade {
  default upgrade;
  '' close;
}

server
{
    server_name grafana.{{ network.domain }};

    # Listen on both IPv4 and IPv6
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    # Add security headers
    {% for sh in nginx_sec_headers -%}
    add_header {{ sh.id }} {{ sh.value | quote }};
    {% endfor %}

    # Add Content security policy
    add_header Content-Security-Policy "{%- for c in csp.list %}{{ c.id }} {{ c.value | default(csp.default) }};{% endfor %}";

    # Features policy
    add_header Feature-Policy "{%- for f in fp.list %}{{ f.id }} {{ f.value | default(fp.default) }};{% endfor %}";

    # Remove useless tokens for better security feelings ;-)
    server_tokens off;

    # SSL configuration
    ssl_certificate /etc/ssl/certs/grafana.{{ network.domain }}.crt;
    ssl_certificate_key /etc/ssl/private/grafana.{{ network.domain }}.key;

    # Default log options
    access_log /var/log/nginx/grafana-access.log;
    error_log  /var/log/nginx/grafana-error.log;

    location / {
        proxy_pass 'http://127.0.0.1:3000';
        proxy_redirect 'http://127.0.0.1:3000' default;
        proxy_pass_request_headers on;

        # Basic authentication
        auth_pam "{{ network.domain }}";
        auth_pam_service_name "nginx";

        proxy_set_header X-REMOTE-USER $remote_user;
        proxy_set_header Authorization "";

        # Forward the original IP address
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
    }

    # Proxy Grafana Live WebSocket connections.
    location /api/live/ {
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Host $http_host;
        proxy_pass http://127.0.0.1:3000;
    }

    # Restrict API access by IP address
    location /api/ {
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Host $http_host;
        proxy_pass http://127.0.0.1:3000;

        # List of IP addresses to authorise
        allow 127.0.0.1/8;
        allow ::1;
        allow {{ public_ext_ip4 }};
        allow {{ public_ext_ip6 }};
        deny all;
    }

}
