---

# See https://github.com/grafana/grafana/issues/12638
- name: Create the required symbolic links
  file:
    src: /var/lib/grafana
    dest: /usr/share/grafana/data
    state: link
  tags: config

- name: Create the required symbolic links
  file:
    src: /var/log/grafana
    dest: /usr/share/grafana/data/logs
    state: link
  tags: config

- name: Create plugins directory to avoid startup error
  notify: Restart Grafana server
  file:
    path: /var/lib/grafana/plugins
    state: directory
    mode: 0700
    owner: grafana
    group: grafana
  tags: config

- name: Deploy Grafana main config file
  notify: Restart Grafana server
  template:
    src: grafana.ini
    dest: /etc/grafana/grafana.ini
    mode: 0640
    owner: root
    group: grafana
  tags: config

- name: Deploy Grafana LDAP config file
  notify: Restart Grafana server
  template:
    src: ldap.toml
    dest: /etc/grafana/ldap.toml
    mode: 0640
    owner: root
    group: grafana
  tags: config

- name: Restart Grafana now if needed
  meta: flush_handlers

# See https://github.com/grafana/grafana/issues/12638
- name: Set the admin password using the API
  when: package_status.changed | default(false)
  block:
    - name: Set the admin password using the API
      register: password_api
      uri:
        url: http://127.0.0.1:3000/api/user/password
        body:
          oldPassword: admin
          newPassword: '{{ grafana_admin_password }}'
          confirmNew: '{{ grafana_admin_password }}'
        method: PUT
        body_format: json
        force_basic_auth: true
        url_username: admin
        url_password: admin
    - name: Display the output
      debug:
        var: password_api
        verbosity: 1
  tags: config

- name: Create and store the api key
  when: package_status.changed | default(false)
  block:
    - name: Call the api to create the admin key
      register: api_key_create_call
      uri:
        url: http://127.0.0.1:3000/api/auth/keys
        method: POST
        url_username: admin
        url_password: '{{ grafana_admin_password }}'
        body:
          name: admin
          role: Admin
        body_format: json
        force_basic_auth: yes
    - name: Store the api key into the password store
      set_fact:
        grafana_api_key: >-
          {{ lookup(creds.store,
          network.domain + "/grafana/api-key"
          + creds.opts.create
          + creds.opts.overwrite
          + " userpass=" + api_key_create_call.json.key
          )}}
  tags: config
