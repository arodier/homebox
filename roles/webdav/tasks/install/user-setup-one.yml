---

- name: Create file shares directory for the user
  ansible.builtin.file:
    path: /home/archives/{{ user.uid }}/files
    state: directory
    owner: '{{ user.uid }}'
    group: '{{ user.uid }}'
    mode: '0700'
  tags: users

- name: Create file shares directory for the user
  ansible.builtin.file:
    path: /home/archives/{{ user.uid }}/webdav/
    state: directory
    owner: '{{ user.uid }}'
    group: '{{ user.uid }}'
    mode: '0700'
  tags: users

- name: Allow the user to traverse the webdav directory
  ansible.posix.acl:
    path: /var/tmp/webdav-user/
    etype: user
    entity: '{{ user.uid }}'
    permissions: 'rx'
    state: present
  tags: users

- name: Create the webdav root directory for the user
  ansible.builtin.file:
    path: /var/tmp/webdav-user/{{ user.uid }}/
    state: directory
    owner: '{{ user.uid }}'
    group: www-data
    mode: '0750'
  tags: users

- name: Create temporary storage directory for the user
  ansible.builtin.file:
    path: /var/tmp/webdav-user/{{ user.uid }}/tmp
    state: directory
    owner: '{{ user.uid }}'
    group: '{{ user.uid }}'
    mode: '0700'
  tags: users

- name: Create config directory for the user
  ansible.builtin.file:
    path: /home/users/{{ user.uid }}/.config/webdav
    state: directory
    owner: '{{ user.uid }}'
    group: '{{ user.uid }}'
    mode: '0700'
  tags: users

- name: Deploy nginx configuration for this user
  ansible.builtin.template:
    src: nginx-user.conf
    dest: /home/users/{{ user.uid }}/.config/webdav/nginx.conf
    owner: '{{ user.uid }}'
    group: '{{ user.uid }}'
    mode: '0600'
  tags: users

- name: Prevent the system to stop the user service
  ansible.builtin.shell: >-
    loginctl enable-linger '{{ user.uid }}'
  changed_when: true
  tags: users

- name: Get the user ID
  register: id_cmd
  shell: id -u {{ user.uid }}
  changed_when: false
  tags: users

- name: Store the user ID
  set_fact:
    user_id: '{{ id_cmd.stdout }}'
  tags: users

- name: Enable the service as a user
  become: true
  become_user: '{{ user.uid }}'
  become_method: sudo
  become_flags: '--preserve-env'
  ansible.builtin.shell: >-
    systemctl --user enable webdav
  changed_when: true
  environment:
    XDG_RUNTIME_DIR: /run/user/{{ user_id }}
    DBUS_SESSION_BUS_ADDRESS: unix:path=/run/user/{{ user_id }}/bus
  tags: users

- name: Start the service as a user
  become: true
  become_user: '{{ user.uid }}'
  become_method: sudo
  become_flags: '--preserve-env'
  ansible.builtin.shell: >-
    systemctl --user start webdav
  changed_when: true
  environment:
    XDG_RUNTIME_DIR: /run/user/{{ user_id }}
    DBUS_SESSION_BUS_ADDRESS: unix:path=/run/user/{{ user_id }}/bus
  tags: users

- name: Show the service status as a user
  become: true
  become_user: '{{ user.uid }}'
  become_method: sudo
  become_flags: '--preserve-env'
  ansible.builtin.shell: >-
    systemctl --user status webdav
  changed_when: false
  environment:
    XDG_RUNTIME_DIR: /run/user/{{ user_id }}
    DBUS_SESSION_BUS_ADDRESS: unix:path=/run/user/{{ user_id }}/bus
  tags: users
