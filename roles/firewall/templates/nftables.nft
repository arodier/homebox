#!/usr/sbin/nft -f

flush ruleset

define icmp6_out = {
	nd-neighbor-solicit,
	nd-neighbor-advert,
    nd-router-advert,
	nd-router-solicit,
	mld-listener-report
}

define icmp6_in = {
	nd-neighbor-solicit,
	nd-router-advert,
	nd-neighbor-advert
}

table inet filter {

    set ssh_denylist {
        type ipv4_addr
        size 65535
        flags dynamic,timeout
        timeout 5m
    }

    chain input {

        type filter hook input priority 0
        policy drop

        # Accept any localhost traffic
        iif lo accept

        # DHCP
        udp sport 67 udp dport 68 limit rate 1/second counter accept \
        comment "IPv4 DHCP client"
        udp sport 547 udp dport 546 limit rate 1/second counter accept \
        comment "IPv6 DHCP client"

        # Accept traffic originated from us
        ct state established,related counter accept \
        comment "Established connections"

        # Allow ssh
        tcp dport ssh limit rate 2/second ct state new counter accept \
        comment "New ssh connections"

        # DNS traffic
        meta l4proto { tcp, udp } th dport domain ct state new counter accept \
        comment "DNS queries"

        # Allow http(s)
        tcp dport { http, https } ct state new counter accept \
        comment "Incoming http(s) connections"

        # Accept neighbour discovery otherwise IPv6 connectivity breaks
        icmpv6 type $icmp6_in \
        counter accept \
        comment "Minimal IPv6 connectivity"

        # limit pings
        icmp type echo-request limit rate 5/second ct state new counter accept \
        comment "Allow pings"

		# Limit new SSH connections ala fail2ban
        ip protocol tcp ct state new,untracked tcp dport ssh \
		limit rate over 10/minute add @ssh_denylist { ip saddr }
        ip saddr @ssh_denylist drop

		limit rate 10/second log prefix "nft-in: drop " \
        comment "Drop and log everything not whitelisted"

    }

    chain forward {

        type filter hook forward priority 0
        policy drop

        # Accept traffic originated from us
        ct state established counter accept \
        comment "Established connections"
        ct state related counter accept \
        comment "Related connections"

        limit rate 10/second log prefix "nft-fwd: drop " \
        comment "Drop everything not whitelisted"

    }

    chain output {

        type filter hook output priority 0
        policy drop

        # accept any localhost traffic
        oif lo accept

        # Accept traffic originated from us
        ct state established,related counter accept \
        comment "Established connections"

        # ntp traffic
        udp dport ntp limit rate 10/second counter accept \
        comment "NTP queries"

        # common icmp
        icmp type { echo-request, time-exceeded, destination-unreachable } \
        limit rate 5/second counter accept \
        comment "Standard ICMPv4 traffic"

        # DNS traffic
        meta l4proto { tcp, udp } th dport domain ct state new counter accept \
        comment "DNS queries"

        # Authorise web traffic from the proxy only
		meta skuid tinyproxy \
        tcp dport { http, https } ct state new counter accept \
        comment "http(s) traffic"

        # accept neighbour discovery otherwise IPv6 connectivity breaks
        icmpv6 type $icmp6_out counter accept \
        comment "IPv6 standard output traffic"

        # DHCP settings
        udp sport 68 udp dport 67 limit rate 1/second counter accept \
        comment "IPv4 DHCP queries"

        udp sport 546 udp dport 547 limit rate 1/second counter accept \
        comment "IPv6 DHCP queries"

        limit rate 10/second log prefix "nft-out: drop " flags skuid \
        counter reject comment "Log and reject non whitelisted traffic"

    }
}

# Include custom rules
include "/etc/nftables/*.nft"
