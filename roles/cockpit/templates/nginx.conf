# Cockpit server configuration

server {

    # Host name
    server_name cockpit.{{ network.domain }};

    # Listen on both IPv4 and IPv6
    listen 80;
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    # Add security headers
    {% for sh in nginx_sec_headers -%}
    add_header {{ sh.id }} {{ sh.value | quote }};
    {% endfor %}

    # Add Content security policy
    add_header Content-Security-Policy "{%- for c in csp.list %}{{ c.id }} {{ c.value | default(csp.default) }};{% endfor %}";

    # Features policy
    add_header Feature-Policy "{%- for f in fp.list %}{{ f.id }} {{ f.value | default(fp.default) }};{% endfor %}";

    # Remove useless tokens for better security feelings ;-)
    server_tokens off;

    # SSL configuration
    ssl_trusted_certificate /etc/ssl/certs/cockpit.{{ network.domain }}.issuer.crt;
    ssl_certificate /etc/ssl/certs/cockpit.{{ network.domain }}.crt;
    ssl_certificate_key /etc/ssl/private/cockpit.{{ network.domain }}.key;

    ssl_protocols {{ security.tls.versions | join(" ") }};
    ssl_ciphers {{ security.tls.openssl_ciphers | join(":") }};
    ssl_prefer_server_ciphers off;

    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;

    location / {
        proxy_pass https://127.0.0.1:9091;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Required for web sockets to function
        proxy_http_version 1.1;
        proxy_buffering off;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # Pass ETag header from Cockpit to clients.
        # See: https://github.com/cockpit-project/cockpit/issues/5239
        gzip off;

    }

    # Nothing here
    location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
    }

    # log files per virtual host
    access_log /var/log/nginx/cockpit-access.log;
    error_log /var/log/nginx/cockpit-error.log;

    # pam authentication
    auth_pam {{ network.domain }};
    auth_pam_service_name "nginx";
    allow 127.0.0.1;
    allow ::1;
    satisfy any;
    deny all;
}
