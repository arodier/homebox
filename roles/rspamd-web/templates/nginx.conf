# Default server configuration
upstream rspamdui {
    server unix:/run/rspamd/controller.sock;
}

server {

    # rspamd FQDN
    server_name rspamd.{{ network.domain }};

    # Listen on both IPv4 and IPv6
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    # Default rspamd location on Debian
    root /usr/share/rspamd/www/;

    # Add security headers
    {% for sh in nginx_sec_headers -%}
    add_header {{ sh.id }} {{ sh.value | quote }};
    {% endfor %}

    # Add Content security policy
    add_header Content-Security-Policy "{%- for c in csp.list %}{{ c.id }} {{ c.value | default(csp.default) }};{% endfor %}";

    # Features policy
    add_header Feature-Policy "{%- for f in fp.list %}{{ f.id }} {{ f.value | default(fp.default) }};{% endfor %}";


    # Remove useless tokens for better security feelings ;-)
    server_tokens off;

    # SSL configuration
    ssl_trusted_certificate /etc/ssl/certs/rspamd.{{ network.domain }}.issuer.crt;
    ssl_certificate /etc/ssl/certs/rspamd.{{ network.domain }}.crt;
    ssl_certificate_key /etc/ssl/private/rspamd.{{ network.domain }}.key;

    ssl_protocols {{ security.tls.versions | join(" ") }};
    ssl_ciphers {{ security.tls.openssl_ciphers | join(":") }};
    ssl_prefer_server_ciphers off;

    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;

    # Add index.php to the list if you are using PHP
    index index.html;

    # Do not use a favicon
    location ~ ^/favicon.ico$ {
        root /usr/share/rspamd/www/;
    }

    # Nothing here
    location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
    }

    location ~ ^/(js|css|fonts|img)/.*$ {
        root /usr/share/rspamd/www/;
    }

    # Do not use a favicon
    location ~ ^/favicon.ico$ {
        root /var/www/default/;
        log_not_found off;
        access_log off;
        expires max;
    }

    location / {
        proxy_pass http://rspamdui;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Real-IP $remote_addr;

        # Disable loopback logging from loopback address
{% for ip in external_ip_addresses %}
        if ( $remote_addr = {{ ip }} ) {
            access_log off;
        }
{% endfor %}
    }

    # log files per virtual host
    access_log /var/log/nginx/rspamd-access.log;
    error_log /var/log/nginx/rspamd-error.log;
}
