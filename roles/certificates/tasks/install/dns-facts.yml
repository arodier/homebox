---

- name: Filter by IP address for IPv6
  when: external_ip_type == 'AAAA'
  ansible.builtin.set_fact:
    dns_servers: '{{ network.dns.servers | ipv6 }}'
    dns_is_live: false
  tags: dns

- name: Filter by IP address for IPv4
  when: external_ip_type == 'A'
  ansible.builtin.set_fact:
    dns_servers: '{{ network.dns.servers | ipv4 }}'
    dns_is_live: false
  tags: dns

- name: Build the certificate FQDN
  when: certificate.name != 'default'
  ansible.builtin.set_fact:
    fqdn: '{{ certificate.name }}.{{ network.domain }}'
    dns_is_live: false
  tags: certs

- name: Build the certificate FQDN for the default site
  when: certificate.name == 'default'
  ansible.builtin.set_fact:
    fqdn: '{{ network.domain }}'
  tags: certs

- name: Build the certificate FQDN for a wildcard
  when: certificate.name == '_'
  ansible.builtin.set_fact:
    fqdn: '*.{{ network.domain }}'
  tags: certs

- name: Generate a random dns entry and check if it is intercepted
  when: certificate.name == '_'
  block:
    - name: Generate random sub domain
      ansible.builtin.set_fact:
        rnd_domain: >-
          {{ lookup("password",
          "/dev/null chars=ascii_letters length=8") | lower }}.{{ network.domain }}
    - name: Check if the DNS server is resolving correctly
      register: host_test
      ansible.builtin.shell: >-
        host {{ rnd_domain }} {{ dns_servers[0] }}
        | grep {{ external_ip_addresses[0] | regex_escape }}
      ignore_errors: true
      changed_when: false
    - name: Set the DNS live fact
      ansible.builtin.set_fact:
        dns_is_live: '{{ host_test is not failed }}'

- name: Check if the DNS server is live for a standard domain
  when: certificate.name != '_'
  block:
    - name: Check if the DNS is live
      register: host_test
      ansible.builtin.shell: >-
        host {{ certificate.name }}.{{ network.domain }} {{ dns_servers[0] }}
        | grep {{ external_ip_addresses[0] | regex_escape }}
      ignore_errors: true
      changed_when: false
      tags: dns
    - name: Store the fact when the DNS server is live
      ansible.builtin.set_fact:
        dns_is_live: '{{ host_test is not failed }}'
