---

- name: Build the certificate FQDN
  when: certificate.name != 'default'
  set_fact:
    fqdn: '{{ certificate.name }}.{{ network.domain }}'

- name: Build the certificate FQDN
  when: certificate.name == 'default'
  set_fact:
    fqdn: '{{ network.domain }}'

- name: Check if the certificate exists
  register: cert_file
  stat:
    path: /var/lib/lego/certificates/{{ certificate.name }}.{{ network.domain }}.crt

- name: Check if the certificate exists and is valid
  when: cert_file.stat.exists
  register: cert_check_cmd
  shell: >-
    openssl verify -verbose
    -CAfile {{ acme_root }}
    -untrusted /var/lib/lego/certificates/{{ fqdn }}.issuer.crt
    /var/lib/lego/certificates/{{ fqdn }}.crt
  ignore_errors: true
  changed_when: false

- name: Set the initial domain argument
  set_fact:
    domains_list:
      - "--domains '{{ fqdn }}'"

- name: Build the san list
  set_fact:
    domains_list: >-
      {{ domains_list + [ "--domains '" + san_domain + "'" ] }}
  loop: '{{ certificate.san_list | default([]) }}'
  loop_control:
    loop_var: san_domain

- name: Create the certificate
  when: >-
    not cert_file.stat.exists
    or cert_recreate
    or cert_check_cmd.failed
  environment:
    PDNS_API_URL: http://127.0.0.1:8081/
    PDNS_API_KEY: '{{ api_key }}'
    http_proxy: 'http://localhost:8888/'
    https_proxy: 'http://localhost:8888/'
  shell: >-
    lego
    --server {{ acme_url }}
    --key-type {{ certificate.type | default("rsa2048") }}
    --email security@{{ network.domain }}
    --dns pdns
    --dns.disable-cp
    --accept-tos
    --path /etc/lego
    {{ domains_list | join(" ") }}
    {{ certificate.pem | default(false) | ternary("--pem", " ") }}
    run
  changed_when: true

- name: Set the certificate permissions
  file:
    path: /var/lib/lego/certificates/{{ fqdn }}.crt
    group: ssl-cert
    mode: 0644

- name: Set the certificate issuer permissions
  file:
    path: /var/lib/lego/certificates/{{ fqdn }}.issuer.crt
    group: ssl-cert
    mode: 0644

- name: Set the pem file permissions
  when: certificate.pem | default(false)
  file:
    path: /var/lib/lego/certificates/{{ fqdn }}.pem
    group: ssl-cert
    mode: 0640

- name: Set the private keys permissions
  file:
    path: /var/lib/lego/certificates/{{ fqdn }}.key
    group: ssl-cert
    mode: 0640

- name: Create the hook directory
  file:
    path: /etc/lego/hooks/{{ fqdn }}/
    state: directory
    mode: 0700

- name: Create the symbolic links in the debian standard directory
  file:
    src: '{{ file.src }}'
    dest: '{{ file.dest }}'
    state: link
  loop:
    - src: /var/lib/lego/certificates/{{ fqdn }}.issuer.crt
      dest: /etc/ssl/certs/{{ fqdn }}.issuer.crt
    - src: /var/lib/lego/certificates/{{ fqdn }}.crt
      dest: /etc/ssl/certs/{{ fqdn }}.crt
    - src: /var/lib/lego/certificates/{{ fqdn }}.key
      dest: /etc/ssl/private/{{ fqdn }}.key
  loop_control:
    loop_var: file

- name: Create the symbolic link for the pem file in the debian standard directory
  when: certificate.pem | default(false)
  file:
    src: /var/lib/lego/certificates/{{ fqdn }}.pem
    dest: /etc/ssl/private/{{ fqdn }}.pem
    state: link
