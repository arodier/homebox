---

- name: Filter by IP address for IPv6
  when: external_ip_type == 'AAAA'
  set_fact:
    dns_servers: '{{ network.dns.servers | ipv6 }}'
  tags: dns

- name: Filter by IP address for IPv4
  when: external_ip_type == 'A'
  set_fact:
    dns_servers: '{{ network.dns.servers | ipv4 }}'
  tags: dns

- name: Build the certificate FQDN
  when: certificate.name != 'default'
  set_fact:
    fqdn: '{{ certificate.name }}.{{ network.domain }}'
  tags: certs

- name: Build the certificate FQDN for the default site
  when: certificate.name == 'default'
  set_fact:
    fqdn: '{{ network.domain }}'
  tags: certs

- name: Build the certificate FQDN for a wildcard
  when: certificate.name == '_'
  set_fact:
    fqdn: '*.{{ network.domain }}'
  tags: certs

- name: Chheck if the DNS server is resolving correctly
  register: host_test
  shell: >-
    host {{ certificate.name }}.{{ network.domain }}
    {{ dns_servers[0] }} | grep {{ fqdn | regex_escape }}
  ignore_errors: true
  changed_when: false
  tags: dns

- name: Store the fact when the DNS server is live
  when: host_test is not failed
  set_fact:
    dns_is_live: true
  tags: dns

- name: Store the fact when the DNS server is not live
  when: host_test is failed
  set_fact:
    dns_is_live: false
  tags: dns
