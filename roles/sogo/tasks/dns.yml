---

- name: Check if the main sogo record exists
  register: main_sogo_record
  shell: >-
    dig -t {{ external_ip_type }}
    +nocomments +noall +answer
    sogo.{{ network.domain }} @127.0.0.1
  changed_when: false
  failed_when: false

- name: Store the fact for the main SOGO record
  set_fact:
    main_sogo_record_missing: '{{ main_sogo_record.stdout | length == 0 }}'

- name: Check if the backup sogo record exists
  when: backup_ip is defined
  register: backup_sogo_record
  shell: >-
    dig -t {{ backup_ip_type }}
    +nocomments +noall +answer
    sogo2.{{ network.domain }} @127.0.0.1
  changed_when: false
  failed_when: false

- name: Store the fact for the backup SOGO record
  when: backup_ip is defined
  set_fact:
    backup_sogo_record_missing: '{{ backup_sogo_record.stdout | length == 0 }}'

- name: Create the main SOGO record
  when: main_sogo_record_missing
  shell: >-
    pdnsutil add-record {{ network.domain }}
    sogo {{ external_ip_type }} {{ external_ip }}
  changed_when: true

- name: Create the backup SOGO record
  when: backup_ip is defined and backup_sogo_record_missing
  shell: >-
    pdnsutil add-record {{ network.domain }}
    sogo2 {{ backup_ip_type }} {{ backup_ip }}
  changed_when: true

- name: Store the extra records to generate
  set_fact:
    extra_dns_records:
      - name: _caldavs
        type: SRV
        value: '10 0 443 sogo.{{ network.domain }}'
      - name: _caldavs
        type: TXT
        value: '"path=/SOGo/dav/"'
      - name: _carddavs
        type: SRV
        value: '10 0 443 sogo.{{ network.domain }}'
      - name: _carddavs
        type: TXT
        value: '"path=/SOGo/dav/"'

- name: Check if the extra records exists
  register: extra_records_status
  shell: >-
    dig -t {{ record.type }}
    +nocomments +noall +answer
    {{ record.name }}._tcp.{{ network.domain }} @127.0.0.1
  changed_when: false
  loop: '{{ extra_dns_records }}'
  loop_control:
    loop_var: record

- name: Create the other records
  when: 'extra_records_status.results[loop_index].stdout | length == 0'
  shell: >-
    pdnsutil add-record {{ network.domain }}
    {{ record.name }}._tcp {{ record.type }}
    '{{ record.value }}'
  changed_when: true
  loop: '{{ extra_dns_records }}'
  loop_control:
    loop_var: record
    index_var: loop_index
