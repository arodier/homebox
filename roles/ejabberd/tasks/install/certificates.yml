---

- name: Create the certificates
  vars:
    certificates:
      - name: conference
      - name: files
      - name: upload
      - name: vjud
      - name: pubsub
      - name: proxy
  ansible.builtin.include_role:
    name: certificates
    apply:
      tags: always
  tags: certs

- name: Check if one of the certificate has been updated
  notify: Restart ejabberd
  ansible.builtin.debug:
    var: updated_certs
  changed_when: updated_certs | default([]) | length > 0
  tags: certs

- name: Create the nginx certificate
  vars:
    certificates:
      - name: xmpp
  ansible.builtin.include_role:
    name: certificates
    apply:
      tags: always
  tags: certs

- name: Check if one of the certificate has been updated
  notify:
    - Check nginx config
    - Restart nginx
  ansible.builtin.debug:
    var: updated_certs
  changed_when: updated_certs | default([]) | length > 0
  tags: certs

- name: Deploy the hooks for each certificate update
  ansible.builtin.copy:
    src: '{{ hook.script }}.sh'
    dest: '/etc/lego/hooks/{{ hook.sub }}.{{ network.domain }}/{{ hook.script }}'
    mode: 0700
  loop:
    - sub: conference
      script: renew-xmpp-cert
    - sub: files
      script: renew-xmpp-cert
    - sub: proxy
      script: renew-xmpp-cert
    - sub: pubsub
      script: renew-xmpp-cert
    - sub: upload
      script: renew-xmpp-cert
    - sub: vjud
      script: renew-xmpp-cert
    - sub: xmpp
      script: renew-nginx-cert
  loop_control:
    loop_var: hook
  tags: certs
