# Default server configuration for https://{{ network.domain }}
server {

    # Listen on both IPv4 and IPv6
    listen 80;
    listen [::]:80;

    # Redirect http to https and keep the whole request
    server_name *.{{ network.domain }} {{ external_ip_addresses | join(" ") }};
    return 301 https://$host$request_uri;
}

server {

    # Listen on both IPv4 and IPv6
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    # Add security headers
    {% for sh in nginx_sec_headers -%}
    add_header {{ sh.id }} {{ sh.value | quote }};
    {% endfor %}

    # Add Content security policy
    add_header Content-Security-Policy "{%- for c in csp.list %}{{ c.id }} {{ c.value | default(csp.default) }};{% endfor %}";

    # Features policy
    add_header Feature-Policy "{%- for f in fp.list %}{{ f.id }} {{ f.value | default(fp.default) }};{% endfor %}";

    # Web site FQDN
    server_name *.{{ network.domain }} {{ external_ip_addresses | join(" ") }};

    # Remove useless tokens for better security feelings ;-)
    server_tokens off;

    # SSL configuration
    ssl_certificate /etc/ssl/certs/_.{{ network.domain }}.crt;
    ssl_trusted_certificate /etc/ssl/certs/_.{{ network.domain }}.issuer.crt;
    ssl_certificate_key /etc/ssl/private/_.{{ network.domain }}.key;

    ssl_protocols {{ security.tls.versions | join(" ") }};
    ssl_ciphers {{ security.tls.openssl_ciphers | join(":") }};
    ssl_prefer_server_ciphers off;

    # pam authentication
    auth_pam {{ network.domain }};
    auth_pam_service_name "nginx";
    allow 127.0.0.1;
    allow ::1;
    satisfy any;
    deny all;

    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;

    # Serve the main web site content, if available
    root /var/www/default/;

    # Will dynamically fall back to the default
    # page if there is no custom index page.
    index index.html index-default.html;

    # Do not use a favicon
    location ~ ^/favicon.ico$ {
        root /var/www/default/;
        log_not_found off;
        access_log off;
        expires max;
    }

    # Nothing here
    location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
    }

    # log files per virtual host
    access_log /var/log/nginx/catchall-access.log combined if=$loggable;
    error_log /var/log/nginx/catchall-error.log;
}
