---

- name: Set the config file path
  ansible.builtin.set_fact:
    config_file_path: '{{ lookup("env", "HOME") }}/.fwknoprc'
    fqdn: '{{ network.hostname }}.{{ network.domain }}'
  tags: client

- name: Check if the configuration file already exists
  register: config_file
  delegate_to: localhost
  become: false
  ansible.builtin.stat:
    path: '{{ config_file_path }}'
  tags: client

- name: Load and parse current configuration
  when: config_file.stat.exists
  delegate_to: localhost
  become: false
  tags: client
  block:
    - name: Load configuration
      register: config_file
      ansible.builtin.slurp:
        path: '{{ config_file_path }}'
    - name: Load the section
      ansible.builtin.set_fact:
        section: '{{ config_file | b64decode |  }}'

- name: Create and read the initial client configuration
  when: not config_file.stat.exists or not key or not hmac_key
  delegate_to: localhost
  become: false
  tags: client
  block:
    - name: Create the initial client configuration
      ansible.builtin.shell: >-
        fwknop -R
        --named-config={{ fqdn }}
        -D {{ fqdn }}
        --key-gen --use-hmac --save-rc-stanza
      args:
        executable: /bin/bash
    - name: Load generated configuration
      ansible.builtin.set_fact:
        key:'{{ lookup("ansible.builtin.ini", "KEY_BASE64", section=fqdn, file=config_file_path) }}'
        hmac_key:'{{ lookup("ansible.builtin.ini", "HMAC_KEY_BASE64", section=fqdn, file=config_file_path) }}'
