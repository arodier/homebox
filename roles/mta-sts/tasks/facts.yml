---

- name: Check if the mta-sts record exists
  register: mta_record_cmd
  shell: >-
    dig -t TXT
    +nocomments +noall +answer
    _mta-sts.{{ network.domain }} @127.0.0.1
  changed_when: false
  failed_when: false

- name: Store the fact for the DNS record
  set_fact:
    mta_record_missing: '{{ mta_record_cmd.stdout is empty string }}'

- name: Create a new ID for mta-sts DNS record
  when: mta_record_missing
  set_fact:
    mta_sts_uid: "{{ lookup('password', '/dev/null length=16 chars=ascii_letters,digits') }}"

- name: Reuse the current ID DNS record
  when: not mta_record_missing
  set_fact:
    mta_sts_uid: '{{ mta_record_cmd.stdout | regex_replace(".*id=([^;]+);.*", "\1") }}'

- name: Check if the mta-sts main web record exists
  register: mta_main_web_record_cmd
  shell: >-
    dig -t {{ external_ip_type }}
    +nocomments +noall +answer
    mta-sts.{{ network.domain }} @127.0.0.1
  changed_when: false
  failed_when: false

- name: Store the fact for the DNS record
  set_fact:
    mta_main_web_record_missing: '{{ mta_main_web_record_cmd.stdout is empty string }}'

- name: Check if the mta-sts backup web record exists
  register: mta_backup_web_record_cmd
  shell: >-
    dig -t {{ backup_ip_type }}
    +nocomments +noall +answer
    mta-sts.{{ network.domain }} @127.0.0.1
  changed_when: false
  failed_when: false

- name: Store the fact for the DNS record
  set_fact:
    mta_backup_web_record_missing: '{{ mta_backup_web_record_cmd.stdout is empty string }}'
