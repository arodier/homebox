---

- name: Set the record to search when not empty
  when: record.name != '@'
  ansible.builtin.set_fact:
    query: '{{ record.name }}.{{ network.domain }}'
  tags: dns

- name: Set the record to search when empty
  when: record.name == '@'
  ansible.builtin.set_fact:
    query: '{{ network.domain }}'
  tags: dns

- name: Check if the record exists with pdnsutil
  register: check_record
  ansible.builtin.shell: >-
    set -o pipefail ;
    pdnsutil list-zone
    | grep '^{{ query | regex_escape }} '
    | grep ' {{ record.type | upper }} '
    | grep -c '{{ record.search | default(record.value) | regex_escape }}'
  args:
    executable: /usr/bin/bash
  changed_when: false
  failed_when: false
  tags: dns

- name: Store the fact to create the record or not
  ansible.builtin.set_fact:
    create_record: '{{ check_record.stdout == "0" }}'
  tags: dns

- name: Create a generic DNS record if not existing
  when:
    - create_record
    - record.type | upper not in [ 'TXT', 'SRV', 'MX', 'SSHFP' ]
  ansible.builtin.shell: >-
    pdnsutil add-record {{ network.domain }}
    {{ record.name }} {{ record.type | upper }}
    {{ record.value }}
  changed_when: true
  tags: dns

- name: Create the TXT DNS record if not existing
  when:
    - create_record
    - record.type | upper == 'TXT'
  ansible.builtin.shell: >-
    pdnsutil add-record {{ network.domain }}
    {{ record.name }} {{ record.type | upper }}
    '"{{ record.value }}"'
  changed_when: true
  tags: dns

- name: Create the SRV DNS record if not existing
  when:
    - create_record
    - record.type | upper == 'SRV'
  ansible.builtin.shell: >-
    pdnsutil add-record {{ network.domain }}
    {{ record.name }} {{ record.type | upper }}
    "{{ record.priority | default(0) }}
     {{ record.weight | default(0) }}
     {{ record.port }}
     {{ record.value }}"
  changed_when: true
  tags: dns

- name: Create the MX DNS record if not existing
  when:
    - create_record
    - record.type | upper == 'MX'
  ansible.builtin.shell: >-
    pdnsutil add-record {{ network.domain }}
    {{ record.name }} {{ record.type | upper }}
    "{{ record.priority | default(0) }}
     {{ record.value }}"
  changed_when: true
  tags: dns

- name: Create the SSHFP DNS record if not existing
  when:
    - create_record
    - record.type | upper == 'SSHFP'
  ansible.builtin.shell: >-
    pdnsutil add-record {{ network.domain }}
    {{ record.name }} {{ record.type | upper }}
    "{{ record.algo }}
     {{ record.hash }}
     {{ record.value }}"
  changed_when: true
  tags: dns
