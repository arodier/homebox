---

- name: Extract backup location details
  tags: backup, facts
  ansible.builtin.set_fact:
    protocol: '{{ location.url | urlsplit("scheme") }}'
    location_host: '{{ location.url | urlsplit("hostname") }}'
    location_user: '{{ location.url | urlsplit("username") | default("backup") }}'
    location_path: '{{ location.url | urlsplit("path") }}'
    location_details: '{{ location.url | urlsplit }}'

- name: Create the backup config into /etc/homebox
  tags: config
  community.general.ini_file:
    path: '/etc/homebox/backup.ini'
    section: '{{ location.name }}'
    option: '{{ option.name }}'
    value: '{{ option.value }}'
    mode: '0600'
  with_items:
    - name: url
      value: '{{ location.url }}'
    - name: active
      value: '{{ location.active }}'
    - name: keep_daily
      value: '{{ location.keep_daily | default(1) }}'
    - name: keep_weekly
      value: '{{ location.keep_weekly | default(1) }}'
    - name: keep_monthly
      value: '{{ location.keep_monthly | default(1) }}'
    - name: compression
      value: '{{ location.compression | default("lz4") }}'
  loop_control:
    loop_var: option

- name: Create a directory to store all the ssh configuration segments
  ansible.builtin.file:
    path: /root/.ssh/config.d/
    state: directory
    mode: '0755'
  tags: backup

- name: Allow external SSH connections
  tags: ufw
  community.general.ufw:
    direction: out
    proto: tcp
    port: 22
    src: any
    rule: allow
    comment: Allow the box to connect outside via SSH for backup

- name: Include the generated configutations in the main file
  tags: ssh
  ansible.builtin.lineinfile:
    path: /root/.ssh/config
    line: '{{ line }}'
    create: true
    mode: '0600'
  loop:
    - "# Generated by homebox:"
    - "Include config.d/*"
  loop_control:
    loop_var: line

- name: Configure the backup location
  ansible.builtin.template:
    src: 'ssh-config'
    dest: '/root/.ssh/config.d/backup-{{ location.name }}'
    mode: '0600'
  tags: ssh

- name: Get backup server signature
  ansible.builtin.shell: 'ssh-keyscan -H {{ location_host }}'
  changed_when: false
  register: keyscan
  tags: ssh

- name: Add the backup server to known_hosts, once for all
  ansible.builtin.lineinfile:
    path: /root/.ssh/known_hosts
    line: '{{ line }}'
    create: true
    mode: '0600'
  loop: '{{ keyscan.stdout_lines }}'
  loop_control:
    loop_var: line
  tags: ssh

- name: Install the required file systems
  ansible.builtin.apt:
    name: sshfs
    state: present

- name: Set mount options for sshfs
  ansible.builtin.set_fact:
    mount_options: []

- name: Add mount point definition for this location
  register: mount_systemd
  notify: Reload Systemd
  ansible.builtin.template:
    src: 'systemd/mount-sshfs.systemd'
    dest: '/etc/systemd/system/mnt-backup-{{ location.name }}.mount'
    mode: '0600'
  tags: systemd

- name: Enable the mount service
  ansible.builtin.systemd:
    name: 'mnt-backup-{{ location.name }}.mount'
    enabled: true
    state: started
  tags: systemd

- name: Add automount definition for this device
  notify: Reload Systemd
  ansible.builtin.template:
    src: mount-auto.systemd
    dest: '/etc/systemd/system/mnt-backup-{{ location.name }}.automount'
    mode: '0644'
  tags: systemd

- name: Enable the automount service
  ansible.builtin.systemd:
    name: 'mnt-backup-{{ location.name }}.automount'
    enabled: true
    state: restarted
    no_block: true
  tags: systemd
