---

- name: Create user directory locally to store ssh information and keys
  delegate_to: localhost
  become: false
  ansible.builtin.file:
    path: '{{ backup_directory }}/ssh/users/{{ user.uid }}'
    state: directory
    mode: '0700'
  tags: users, keys

- name: Create a unique the key ID from the data
  ansible.builtin.set_fact:
    key_id: '{{ (sshkey.data | replace(" ", "") | hash("sha1"))[0:8] }}'
  tags: users, facts

- name: Create a unique file name for the key
  ansible.builtin.set_fact:
    key_file_name: '{{ sshkey.filename | default("git-" + key_id) }}'
  tags: users, facts

- name: Store the public key in a file locally
  delegate_to: localhost
  become: false
  register: public_key
  ansible.builtin.copy:
    content: '{{ sshkey.type }} {{ sshkey.data | replace(" ", "") }} {{ sshkey.comment | default("") }}'
    dest: '{{ backup_directory }}/ssh/users/{{ user.uid }}/{{ key_file_name }}.pub'
    mode: '0644'
  tags: users, keys

- name: Temporary decrypt the server CA key
  no_log: '{{ hide_secrets }}'
  delegate_to: localhost
  become: false
  ansible.builtin.shell: >-
    ssh-keygen -p
    -P '{{ cakey_passphrase }}'
    -N ''
    -f '{{ backup_directory }}/ssh/ca/ca.key'
  changed_when: true
  tags: ca, keys

- name: Sign the public key and store the public key certificate
  delegate_to: localhost
  become: false
  community.crypto.openssh_cert:
    type: user
    signing_key: '{{ backup_directory }}/ssh/ca/ca.key'
    public_key: '{{ backup_directory }}/ssh/users/{{ user.uid }}/{{ key_file_name }}.pub'
    path: '{{ backup_directory }}/ssh/users/{{ user.uid }}/{{ key_file_name }}-cert.pub'
    identifier: '{{ user.uid }}-git-{{ key_id }}'
    state: present
    force: '{{ public_key.changed }}'
    principals:
      - '{{ user.uid }}'
    options:
      - clear
      - force-command=/usr/local/bin/git-only
    mode: '0600'
    valid_from: +0s
    valid_to: '+{{ sshkey.validity | default(git.ssh.validity) }}'
    valid_at: +2w
    ignore_timestamps: true
  tags: users, keys

- name: Re-encrypt the key
  no_log: '{{ hide_secrets }}'
  delegate_to: localhost
  become: false
  ansible.builtin.shell: >-
    ssh-keygen -p
    -P ''
    -N '{{ cakey_passphrase }}'
    -f '{{ backup_directory }}/ssh/ca/ca.key'
  changed_when: true
  tags: ca, keys

- name: Create user SSH configuration template for this key
  delegate_to: localhost
  become: false
  ansible.builtin.template:
    src: ssh-user.conf
    dest: '{{ backup_directory }}/ssh/users/{{ user.uid }}/{{ key_file_name }}-ssh.conf'
    mode: '0644'
  tags: users, keys
